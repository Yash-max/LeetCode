class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        stack<ListNode*> s1,s2;
        while(l1){
            s1.push(l1);
            l1=l1->next;
        }
        while(l2){
            s2.push(l2);
            l2=l2->next;
        }
        int n = s1.size();
        int m = s2.size();
        if(m > n){
            swap(l1,l2);
            swap(s1,s2);
            swap(n,m);
        }
        ListNode* ans=NULL;
        int sum=0,carry=0;
        while(!s1.empty() && !s2.empty()){
            int x=s1.top()->val;
            int y=s2.top()->val;
            sum = x + y + carry;
            carry = sum/10;
            sum = sum % 10;
            s1.pop(),s2.pop();
            ListNode* temp=new ListNode(sum);
            temp->next = ans;
            ans = temp;
        }
        while(!s1.empty()){
            int x=s1.top()->val;
            sum = x + carry;
            carry = sum/10;
            sum = sum % 10;
            s1.pop();
            ListNode* temp=new ListNode(sum);
            temp->next = ans;
            ans = temp;
        }
        if(carry){
            ListNode* temp=new ListNode(carry);
            temp->next = ans;
            ans = temp;
        }
        return ans;
    }
};

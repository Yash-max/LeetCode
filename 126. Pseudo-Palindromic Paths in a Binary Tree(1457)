class Solution {
public:
    bool isPallindrome(string s){
        vector<int> arr(26,0);
        for(int i=0;i<s.length();i++){
            arr[s[i]-'0']++;
        }
        int count = 0;
        for(int i=0;i<26;i++){
            if(arr[i] % 2 != 0){
                count++;
            }
            if(count > 1) return false;
        }
       return true;
    }
    int util(TreeNode* root,string s){
        if(!root){
            return isPallindrome(s);
        }
        if(!root->left && !root->right){
            return util(root->left,s+to_string(root->val));
        }
        int l=0,r=0;
        if(root->left){
            l = util(root->left,s+to_string(root->val));
        }
        if(root->right){
            r = util(root->right,s+to_string(root->val));
        }
        return l+r;
    }
    int pseudoPalindromicPaths (TreeNode* root) {
        return util(root,"");
    }
};

class Solution {
public:
    int fourSumCount(vector<int>& A, vector<int>& B, vector<int>& C, vector<int>& D) {
        int n = A.size();
        if(n == 0){
            return 0;
        }
        unordered_map<int,int> m;
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                m[C[i]+D[j]]++;
            }
        }
        int count=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                int sum = A[i]+B[j];
                auto itr = m.find(-sum);
                if(itr != m.end()){count+=itr->second;}
            }
            // unordered_map is way faster than map
            // find is also faster than m[sth]
        }
        return count;
    }
};

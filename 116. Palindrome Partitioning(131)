class Solution {
public:
    bool check(string s,int l,int r){
        while(l <= r){
            if(s[l++] != s[r--]){
                return false;
            }
        }
        return true;
    }
    void dfs(int index,string s,vector<string> &t,vector<vector<string>> &v){
        int n = s.length();
        if(index == n){
            v.push_back(t);
            return;
        }
        for(int i=index;i<n;i++){
            if(check(s,index,i)){
                t.push_back(s.substr(index,i-index+1));
                dfs(i+1,s,t,v);
                t.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>> v;
        vector<string> t;
        dfs(0,s,t,v);
        return v;
    }
};

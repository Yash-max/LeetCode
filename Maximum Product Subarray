class Solution {
public:
    int maxProduct(vector<int>& arr) {
        int ans = INT_MIN, maxi = INT_MIN, n = arr.size();
        vector<vector<int>> prefix(n+1, vector<int> (2));
        vector<vector<int>> suffix(n+1, vector<int> (2));
        for(int i = 0, j = n-1; i < n; i++, j--) {
            if(i == 0) {
                prefix[0][0] = 1;
                prefix[0][1] = 1;
            } 
            if(j == n-1) {
                suffix[n-1][0] = 1;
                suffix[n-1][1] = 1;
            }
            if(i != 0){
                if(arr[i-1] == 0) {
                    prefix[i][0] = 1;
                    prefix[i][1] = 1;
                } else if(arr[i-1] > 0) {
                    prefix[i][0] = min(1, prefix[i-1][0] * arr[i-1]);
                    prefix[i][1] = max(1, prefix[i-1][1] * arr[i-1]);
                } else {
                    prefix[i][0] = min(1, prefix[i-1][1] * arr[i-1]);
                    prefix[i][1] = max(1, prefix[i-1][0] * arr[i-1]);
                }
            }
            if(j != n-1){
                if(arr[j+1] == 0) {
                    suffix[j][0] = 1;
                    suffix[j][1] = 1;
                } else if(arr[j+1] > 0) {
                    suffix[j][0] = min(1, suffix[j+1][0] * arr[j+1]);
                    suffix[j][1] = max(1, suffix[j+1][1] * arr[j+1]);
                } else {
                    suffix[j][0] = min(1, suffix[j+1][1] * arr[j+1]);
                    suffix[j][1] = max(1, suffix[j+1][0] * arr[j+1]);
                }
            }
        }
        
        /*for(int i = 0; i < n; i++) {
            cout << prefix[i][0] << " ";
        } cout << endl;
        for(int i = 0; i < n; i++) {
            cout << prefix[i][1] << " ";
        } cout << endl;
        
        for(int i = 0; i < n; i++) {
            cout << suffix[i][0] << " ";
        } cout << endl;
        for(int i = 0; i < n; i++) {
            cout << suffix[i][1] << " ";
        } cout << endl;*/
        
        for(int i = 0; i < arr.size(); i++) {
            maxi = max(maxi, arr[i]);
            int temp = INT_MIN;
            if(arr[i] == 0) {
                temp = 0;
            } else if(arr[i] > 0) { 
                temp = max(temp, prefix[i][1] * arr[i] * suffix[i][1]);
                temp = max(temp, prefix[i][0] * arr[i] * suffix[i][0]);
            } else {
                temp = max(temp, prefix[i][1] * arr[i] * suffix[i][0]);
                temp = max(temp, prefix[i][0] * arr[i] * suffix[i][1]);
            }
            ans = max(ans, temp);
        }
        return max(ans, maxi);
    }
};

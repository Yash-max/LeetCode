class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        map<int, int> mp;
        for(int i = 0; i < nums.size(); i++) {
            mp[nums[i]]++;
        }
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
        for(auto itr: mp) {
            pq.push({itr.second, itr.first});
            if(pq.size() > k) pq.pop();
        }
        vector<int> v;
        while(!pq.empty()) {
            pair<int, int> temp = pq.top();
            pq.pop();
            v.push_back(temp.second);
        }
        return v;
    }
};

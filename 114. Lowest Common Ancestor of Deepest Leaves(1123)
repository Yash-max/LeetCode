/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int depth(TreeNode* root) {
        if(!root) return 0;
        return max(depth(root->left),depth(root->right))+1;
    }
    TreeNode* lcaDeepestLeaves(TreeNode* root){
        if(!root) return NULL;
        int dl = depth(root->left);
        int dr = depth(root->right);
        if(dl == dr){
            return root;
        }else if(dl > dr){
            return lcaDeepestLeaves(root->left);
        }else{
            return lcaDeepestLeaves(root->right);
        }
        return NULL;
    }
};

class Solution {
public:
    int maxCount(int m, int n, vector<vector<int>>& ops) {
        int opsSize = ops.size();
        if(opsSize == 0) return m*n;
        int ans = 0;
        vector<int> horizontal = {m, n};
        vector<int> vertical = {m, n};
        for(int i = 0; i < opsSize; i++) {
            if(ops[i][0] < vertical[0]) {
                vertical[0] = ops[i][0];
                vertical[1] = ops[i][1];
            } else if(ops[i][0] == vertical[0] && ops[i][1] < vertical[1]) {
                vertical[1] = ops[i][1];
            }
            
            if(ops[i][1] < horizontal[1]) {
                horizontal[0] = ops[i][0];
                horizontal[1] = ops[i][1];
            } else if(ops[i][1] == horizontal[1] && ops[i][0] < horizontal[0]) {
                horizontal[1] = ops[i][1];
            }
        }
        ans = (min(vertical[0], horizontal[0]) * min(vertical[1], horizontal[1]));
        return ans;
    }
};

class Solution {
public:
    ListNode* reverse(ListNode* head){
        if(!head || !head->next){return head;}
        ListNode* prev=NULL;
        ListNode* next=NULL;
        ListNode* curr=head;
        while(curr){
            next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
    bool isPalindrome(ListNode* head) {
        if(!head || !head->next){
            return true;
        }
        ListNode* slow=head,* fast=head;
        while(fast && fast->next){
            fast=fast->next->next;
            slow=slow->next;
        }
        if(fast){slow=slow->next;}
        slow=reverse(slow);
        while(head && slow){
            if(head->val != slow->val){
                return false;
            }
            head=head->next;
            slow=slow->next;
        }
        return true;
    }
};

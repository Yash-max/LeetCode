class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> v;
        if(!root){
            return v;
        }
        vector<int> temp;
        queue<TreeNode*> q;
        q.push(root);
        q.push(NULL);
        while(!q.empty()){
            TreeNode* aux=q.front();
            if(aux == NULL){
                if(q.size() > 1){q.push(NULL);}
                v.push_back(temp);
                temp.clear();
            }else{
                temp.push_back(aux->val);
                if(aux->left){
                    q.push(aux->left);
                }
                if(aux->right){
                    q.push(aux->right);
                }
            }
            q.pop();
        }
        reverse(v.begin(),v.end());
        return v;
    }
};

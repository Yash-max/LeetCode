class Solution {
public:
    ListNode* mergeList(ListNode* l1,ListNode* l2){
        if(!l1){
            return l2;
        }else if(!l2){
            return l1;
        }else{
            ListNode* head = NULL;
            if(l1->val < l2->val){
                head = l1;
                l1=l1->next;
            }else{
                head = l2;
                l2=l2->next;
            }
            ListNode* temp = head;
            while(l1 && l2){
                if(l1->val < l2->val){
                    temp->next=l1;
                    temp=temp->next;
                    l1=l1->next;
                }else{
                    temp->next=l2;
                    temp=temp->next;
                    l2=l2->next;
                }
            }
            if(l1){
                temp->next=l1;
            }
            if(l2){
                temp->next=l2;
            }
            return head;
        }
    }
    ListNode* sortList(ListNode* head) {
        if(!head || !head->next){return head;}
        ListNode *slow=head,*fast=head;
        while(fast && fast->next){
            fast=fast->next->next;
            if(fast){
                slow=slow->next;
            }
        }
        ListNode *a = head;
        ListNode *b = slow->next;
        slow->next=NULL;
        a=sortList(a);
        b=sortList(b);
        ListNode *temp = mergeList(a,b);
        return temp;
    }
};

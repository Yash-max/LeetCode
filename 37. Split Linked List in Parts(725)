class Solution {
public:
    int length(ListNode* root){
        int len=0;
        while(root){
            root=root->next;
            len++;
        }
        return len;
    }
    vector<ListNode*> splitListToParts(ListNode* root, int k) {
        int n=length(root);
        vector<ListNode*> v;
        if(n == 0){
            for(int i=0;i<k;i++){
                v.push_back(NULL);
            }
        }
        else if(n <= k){
            while(root){
                ListNode *temp=root;
                root=root->next;
                temp->next=NULL;
                v.push_back(temp);
            }
            int diff=abs(n-k);
            while(diff--){
                v.push_back(NULL);
            }
        }else{
            int q = n / k;
            int r = n % k;
            for(int i=0;i<k;i++,r--){
                ListNode* prev=NULL;
                v.push_back(root);
                for(int j=0;j<q+(r>0);j++){
                    prev=root;
                    root=root->next;
                }
                if(prev){
                    prev->next=NULL;
                }
            }
        }
        return v;
    }
};

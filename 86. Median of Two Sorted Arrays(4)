class Solution {
public:
    double findMedianSortedArrays(vector<int>& a, vector<int>& b) {
       int n = a.size(), m = b.size();
        if(m == 0){
            if(n % 2 != 0){
                return double (a[n/2]);
            }else{
                return (double(a[n/2]+a[(n-1)/2]))/2;
            }
        }else if(n == 0){
            if(m % 2 != 0){
                return double (b[m/2]);
            }else{
                return (double(b[m/2]+b[(m-1)/2]))/2;
            }
        }else{
            vector<int> v;
            int i = 0, j = 0;
            while(i < n && j < m){
                if(a[i] <= b[j]){
                    v.push_back(a[i++]);
                }else{
                    v.push_back(b[j++]);
                }
            }
            while(i < n){
                v.push_back(a[i++]);
            }
            while(j < m){
                v.push_back(b[j++]);
            }
            int x = v.size();
            if(x % 2 != 0){
                return double (v[x/2]);
            }else{
                return (double(v[x/2]+v[(x-1)/2]))/2;
            }
        }
    }
};
